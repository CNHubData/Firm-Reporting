{
  "version": "1.0",
  "conceptualSchemaSettings": {},
  "queries": [
    {
      "name": "Activity_View",
      "lineageTag": "3e9fa529-3d25-4ee3-aaaa-f69840381a9d",
      "queryGroupId": "51fd8311-d26e-4eb7-972c-874a7fd9d6a2",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "    Source = Sql.Databases(\"cn-apps2\\cnapps2\"),",
        "    CSP_7952_CooperCS = Source{[Name=\"CSP_7952_CooperCS\"]}[Data],",
        "    dbo_Activity_View = CSP_7952_CooperCS{[Schema=\"dbo\",Item=\"Activity_View\"]}[Data]",
        "in",
        "    dbo_Activity_View"
      ],
      "isDirectQuery": true,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = Sql.Databases(\\\"cn-apps2\\\\cnapps2\\\"),\\n    CSP_7952_CooperCS = Source{[Name=\\\"CSP_7952_CooperCS\\\"]}[Data],\\n    dbo_Activity_View = CSP_7952_CooperCS{[Schema=\\\"dbo\\\",Item=\\\"Activity_View\\\"]}[Data]\\nin\\n    dbo_Activity_View\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "Billing_Decision_View",
      "lineageTag": "6e68eeb8-a21a-45f8-b3cb-ecbe549825c7",
      "queryGroupId": "51fd8311-d26e-4eb7-972c-874a7fd9d6a2",
      "text": [
        "let",
        "    Source = Sql.Databases(\"cn-apps2\\cnapps2\"),",
        "    CSP_7952_CooperCS = Source{[Name=\"CSP_7952_CooperCS\"]}[Data],",
        "    dbo_Billing_Decision_View = CSP_7952_CooperCS{[Schema=\"dbo\",Item=\"Billing_Decision_View\"]}[Data],",
        "    #\"Added Custom\" = Table.AddColumn(dbo_Billing_Decision_View, \"client_engagement_KEY\", each Text.From([sheet_entry__client_KEY]) & \"_\" & Text.From([sheet_entry__engagement_KEY])),",
        "    // Created the column to use in visualization.  Assigns the row the start of month based on the invoice date.",
        "    #\"Inserted invoice__invoice_month\" = Table.AddColumn(#\"Added Custom\", \"invoice__invoice_month\", each Date.StartOfMonth([invoice__invoice_date]), type datetime)",
        "in",
        "    #\"Inserted invoice__invoice_month\""
      ],
      "isDirectQuery": true,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = Sql.Databases(\\\"cn-apps2\\\\cnapps2\\\"),\\n    CSP_7952_CooperCS = Source{[Name=\\\"CSP_7952_CooperCS\\\"]}[Data],\\n    dbo_Billing_Decision_View = CSP_7952_CooperCS{[Schema=\\\"dbo\\\",Item=\\\"Billing_Decision_View\\\"]}[Data],\\n    #\\\"Added Custom\\\" = Table.AddColumn(dbo_Billing_Decision_View, \\\"client_engagement_KEY\\\", each Text.From([sheet_entry__client_KEY]) & \\\"_\\\" & Text.From([sheet_entry__engagement_KEY])),\\n    // Created the column to use in visualization.  Assigns the row the start of month based on the invoice date.\\n    #\\\"Inserted invoice__invoice_month\\\" = Table.AddColumn(#\\\"Added Custom\\\", \\\"invoice__invoice_month\\\", each Date.StartOfMonth([invoice__invoice_date]), type datetime)\\nin\\n    #\\\"Inserted invoice__invoice_month\\\"\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "Billing_Decision_Collection_View",
      "lineageTag": "7a4af6f5-b42a-490e-bbe6-2a791e2d6bef",
      "queryGroupId": "51fd8311-d26e-4eb7-972c-874a7fd9d6a2",
      "text": [
        "let",
        "    Source = Sql.Databases(\"cn-apps2\\cnapps2\"),",
        "    CSP_7952_CooperCS = Source{[Name=\"CSP_7952_CooperCS\"]}[Data],",
        "    dbo_Billing_Decision_Collection_View = CSP_7952_CooperCS{[Schema=\"dbo\",Item=\"Billing_Decision_Collection_View\"]}[Data]",
        "in",
        "    dbo_Billing_Decision_Collection_View"
      ],
      "isDirectQuery": true,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = Sql.Databases(\\\"cn-apps2\\\\cnapps2\\\"),\\n    CSP_7952_CooperCS = Source{[Name=\\\"CSP_7952_CooperCS\\\"]}[Data],\\n    dbo_Billing_Decision_Collection_View = CSP_7952_CooperCS{[Schema=\\\"dbo\\\",Item=\\\"Billing_Decision_Collection_View\\\"]}[Data]\\nin\\n    dbo_Billing_Decision_Collection_View\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "Client_View",
      "lineageTag": "123f41e5-0c84-4fac-8e37-98c143248a34",
      "queryGroupId": "51fd8311-d26e-4eb7-972c-874a7fd9d6a2",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "    Source = Sql.Databases(\"cn-apps2\\cnapps2\"),",
        "    CSP_7952_CooperCS = Source{[Name=\"CSP_7952_CooperCS\"]}[Data],",
        "    dbo_Client_View = CSP_7952_CooperCS{[Schema=\"dbo\",Item=\"Client_View\"]}[Data],",
        "    #\"Merged Queries\" = Table.NestedJoin(dbo_Client_View, {\"client_KEY\"}, client_industry, {\"row_KEY\"}, \"client_industry\", JoinKind.LeftOuter),",
        "    // merging to get the industry custom field assigned to the client",
        "    #\"Expanded client_industry\" = Table.ExpandTableColumn(#\"Merged Queries\", \"client_industry\", {\"industry_id\", \"industry__description\"}, {\"industry_id\", \"industry__description\"}),",
        "    // a combination of the Client_KEY and the Partner_Staff_KEY to create a composite KEY that will allow a direct connection to the Invoice_Biller_Checking table.",
        "    #\"Added client_partner_key\" = Table.AddColumn(#\"Expanded client_industry\", \"client_partner_key\", each Text.From([client_KEY]) & \"-\" & Text.From([partner__staff_KEY])),",
        "    #\"Added client_partner_id\" = Table.AddColumn(#\"Added client_partner_key\", \"client_partner_id\", each Text.From([client_KEY]) & \"-\" & Text.From([partner__staff__staff_id])),",
        "    #\"Merged RCG\" = Table.NestedJoin(#\"Added client_partner_id\", {\"client_KEY\"}, RCG, {\"row_KEY\"}, \"RCG\", JoinKind.LeftOuter),",
        "    // These two steps are merging to custom_value_view where the field_key = 59 (the related client grou).",
        "    #\"Expanded RCG\" = Table.ExpandTableColumn(#\"Merged RCG\", \"RCG\", {\"related_client_group_id\", \"related_client_group__description\"}, {\"related_client_group_id\", \"related_client_group__description\"}),",
        "    #\"Merged Partner\" = Table.NestedJoin(#\"Expanded RCG\", {\"partner__staff_KEY\"}, Staff, {\"staff_KEY\"}, \"Partner\", JoinKind.LeftOuter),",
        "    #\"Merged Manager\" = Table.NestedJoin(#\"Merged Partner\", {\"manager__staff_KEY\"}, Staff, {\"staff_KEY\"}, \"Manager\", JoinKind.LeftOuter),",
        "    #\"Expanded Partner\" = Table.ExpandTableColumn(#\"Merged Manager\", \"Partner\", {\"staff_id\", \"description\"}, {\"partner_id\", \"partner__description\"}),",
        "    #\"Expanded Manager\" = Table.ExpandTableColumn(#\"Expanded Partner\", \"Manager\", {\"staff_id\", \"description\"}, {\"manager_id\", \"manager_description\"}),",
        "    // This column will return the fiscal year in which the client's account was opened with Cooper Norman.  This is meant to help with the client growth report.",
        "    #\"Added date_opened_fy\" = Table.AddColumn(#\"Expanded Manager\", \"date_opened_fy\", each if Date.Month([date_opened]) >= 7 then ",
        "Date.Year([date_opened]) + 1 else ",
        "Date.Year([date_opened]), type number),",
        "    // This column will return the fiscal year in which the client's account was closed with Cooper Norman.  This is meant to help with the client growth report.",
        "    #\"Added date_left_fy\" = Table.AddColumn(#\"Added date_opened_fy\", \"date_left_fy\", each if Date.Month([date_left]) >= 7 then ",
        "Date.Year([date_left]) + 1 else ",
        "Date.Year([date_left]), type number),",
        "    // This field is updated whenever a client is transferred to a new partner within the firm.  This documents who the previous partner for the client was, while the staff_partner field indicates who the current partner is.",
        "    #\"Merged secondary_partner\" = Table.NestedJoin(#\"Added date_left_fy\", {\"client_KEY\"}, #\"secondary_partner/ae\", {\"row_KEY\"}, \"secondary_partner/ae\", JoinKind.LeftOuter),",
        "    #\"Expanded secondary_partner/ae\" = Table.ExpandTableColumn(#\"Merged secondary_partner\", \"secondary_partner/ae\", {\"secondary_partner_KEY\", \"secondary_partner_id\", \"secondary_partner__description\"}, {\"secondary_partner_KEY\", \"secondary_partner_id\", \"secondary_partner__description\"}),",
        "    // This connects a custom field that shows us when a secondary_partner became effective.  Essentially this field will tell us when the client was transferred from the secondary partner to the current partner.",
        "    #\"Merged secondary_partner_date\" = Table.NestedJoin(#\"Expanded secondary_partner/ae\", {\"client_KEY\"}, #\"secondary_partner/ae_date\", {\"row_KEY\"}, \"secondary_partner/ae_date\", JoinKind.LeftOuter),",
        "    #\"Expanded secondary_partner/ae_date\" = Table.ExpandTableColumn(#\"Merged secondary_partner_date\", \"secondary_partner/ae_date\", {\"custom_value_as_date\"}, {\"secondary_partner_effective_date\"})",
        "in",
        "    #\"Expanded secondary_partner/ae_date\""
      ],
      "isDirectQuery": true,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = Sql.Databases(\\\"cn-apps2\\\\cnapps2\\\"),\\n    CSP_7952_CooperCS = Source{[Name=\\\"CSP_7952_CooperCS\\\"]}[Data],\\n    dbo_Client_View = CSP_7952_CooperCS{[Schema=\\\"dbo\\\",Item=\\\"Client_View\\\"]}[Data],\\n    // a combination of the Client_KEY and the Partner_Staff_KEY to create a composite KEY that will allow a direct connection to the Invoice_Biller_Checking table.\\n    #\\\"Added client_partner_key\\\" = Table.AddColumn(dbo_Client_View, \\\"client_partner_key\\\", each Text.From([client_KEY]) & \\\"-\\\" & Text.From([partner__staff_KEY])),\\n    #\\\"Added client_partner_id\\\" = Table.AddColumn(#\\\"Added client_partner_key\\\", \\\"client_partner_id\\\", each Text.From([client_KEY]) & \\\"-\\\" & Text.From([partner__staff__staff_id])),\\n    #\\\"Merged RCG\\\" = Table.NestedJoin(#\\\"Added client_partner_id\\\", {\\\"client_KEY\\\"}, RCG, {\\\"row_KEY\\\"}, \\\"RCG\\\", JoinKind.LeftOuter),\\n    // These two steps are merging to custom_value_view where the field_key = 59 (the related client grou).\\n    #\\\"Expanded RCG\\\" = Table.ExpandTableColumn(#\\\"Merged RCG\\\", \\\"RCG\\\", {\\\"related_client_group_id\\\", \\\"related_client_group__description\\\"}, {\\\"related_client_group_id\\\", \\\"related_client_group__description\\\"}),\\n    #\\\"Merged Partner\\\" = Table.NestedJoin(#\\\"Expanded RCG\\\", {\\\"partner__staff_KEY\\\"}, Staff, {\\\"staff_KEY\\\"}, \\\"Partner\\\", JoinKind.LeftOuter),\\n    #\\\"Merged Manager\\\" = Table.NestedJoin(#\\\"Merged Partner\\\", {\\\"manager__staff_KEY\\\"}, Staff, {\\\"staff_KEY\\\"}, \\\"Manager\\\", JoinKind.LeftOuter),\\n    #\\\"Expanded Partner\\\" = Table.ExpandTableColumn(#\\\"Merged Manager\\\", \\\"Partner\\\", {\\\"staff_id\\\", \\\"description\\\"}, {\\\"partner_id\\\", \\\"partner__description\\\"}),\\n    #\\\"Expanded Manager\\\" = Table.ExpandTableColumn(#\\\"Expanded Partner\\\", \\\"Manager\\\", {\\\"staff_id\\\", \\\"description\\\"}, {\\\"manager_id\\\", \\\"manager_description\\\"}),\\n    // This column will return the fiscal year in which the client's account was opened with Cooper Norman.  This is meant to help with the client growth report.\\n    #\\\"Added date_opened_fy\\\" = Table.AddColumn(#\\\"Expanded Manager\\\", \\\"date_opened_fy\\\", each if Date.Month([date_opened]) >= 7 then \\nDate.Year([date_opened]) + 1 else \\nDate.Year([date_opened]), type number),\\n    // This column will return the fiscal year in which the client's account was closed with Cooper Norman.  This is meant to help with the client growth report.\\n    #\\\"Added date_left_fy\\\" = Table.AddColumn(#\\\"Added date_opened_fy\\\", \\\"date_left_fy\\\", each if Date.Month([date_left]) >= 7 then \\nDate.Year([date_left]) + 1 else \\nDate.Year([date_left]), type number),\\n    // This field is updated whenever a client is transferred to a new partner within the firm.  This documents who the previous partner for the client was, while the staff_partner field indicates who the current partner is.\\n    #\\\"Merged secondary_partner\\\" = Table.NestedJoin(#\\\"Added date_left_fy\\\", {\\\"client_KEY\\\"}, #\\\"secondary_partner/ae\\\", {\\\"row_KEY\\\"}, \\\"secondary_partner/ae\\\", JoinKind.LeftOuter),\\n    #\\\"Expanded secondary_partner/ae\\\" = Table.ExpandTableColumn(#\\\"Merged secondary_partner\\\", \\\"secondary_partner/ae\\\", {\\\"secondary_partner_KEY\\\", \\\"secondary_partner_id\\\", \\\"secondary_partner__description\\\"}, {\\\"secondary_partner_KEY\\\", \\\"secondary_partner_id\\\", \\\"secondary_partner__description\\\"}),\\n    // This connects a custom field that shows us when a secondary_partner became effective.  Essentially this field will tell us when the client was transferred from the secondary partner to the current partner.\\n    #\\\"Merged secondary_partner_date\\\" = Table.NestedJoin(#\\\"Expanded secondary_partner/ae\\\", {\\\"client_KEY\\\"}, #\\\"secondary_partner/ae_date\\\", {\\\"row_KEY\\\"}, \\\"secondary_partner/ae_date\\\", JoinKind.LeftOuter),\\n    #\\\"Expanded secondary_partner/ae_date\\\" = Table.ExpandTableColumn(#\\\"Merged secondary_partner_date\\\", \\\"secondary_partner/ae_date\\\", {\\\"custom_value_as_date\\\"}, {\\\"secondary_partner_effective_date\\\"})\\nin\\n    #\\\"Expanded secondary_partner/ae_date\\\"\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "Client_Date_Cache",
      "lineageTag": "fbfb9384-46be-4b69-b973-2738298971a9",
      "queryGroupId": "51fd8311-d26e-4eb7-972c-874a7fd9d6a2",
      "text": [
        "let",
        "    Source = Sql.Databases(\"cn-apps2\\cnapps2\"),",
        "    CSP_7952_CooperCS = Source{[Name=\"CSP_7952_CooperCS\"]}[Data],",
        "    dbo_Client_Date_Cache = CSP_7952_CooperCS{[Schema=\"dbo\",Item=\"Client_Date_Cache\"]}[Data]",
        "in",
        "    dbo_Client_Date_Cache"
      ],
      "isDirectQuery": true,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = Sql.Databases(\\\"cn-apps2\\\\cnapps2\\\"),\\n    CSP_7952_CooperCS = Source{[Name=\\\"CSP_7952_CooperCS\\\"]}[Data],\\n    dbo_Client_Date_Cache = CSP_7952_CooperCS{[Schema=\\\"dbo\\\",Item=\\\"Client_Date_Cache\\\"]}[Data]\\nin\\n    dbo_Client_Date_Cache\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "Contact_View",
      "lineageTag": "719cca15-f09a-4e3b-8865-896970415175",
      "queryGroupId": "51fd8311-d26e-4eb7-972c-874a7fd9d6a2",
      "text": [
        "let",
        "    Source = Sql.Databases(\"cn-apps2\\cnapps2\"),",
        "    CSP_7952_CooperCS = Source{[Name=\"CSP_7952_CooperCS\"]}[Data],",
        "    dbo_Contact_View = CSP_7952_CooperCS{[Schema=\"dbo\",Item=\"Contact_View\"]}[Data]",
        "in",
        "    dbo_Contact_View"
      ],
      "isDirectQuery": true,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = Sql.Databases(\\\"cn-apps2\\\\cnapps2\\\"),\\n    CSP_7952_CooperCS = Source{[Name=\\\"CSP_7952_CooperCS\\\"]}[Data],\\n    dbo_Contact_View = CSP_7952_CooperCS{[Schema=\\\"dbo\\\",Item=\\\"Contact_View\\\"]}[Data]\\nin\\n    dbo_Contact_View\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "Contact_Address",
      "lineageTag": "f0425ca8-d8b3-489c-8491-783037067ff5",
      "queryGroupId": "51fd8311-d26e-4eb7-972c-874a7fd9d6a2",
      "text": [
        "let",
        "    Source = Sql.Databases(\"cn-apps2\\cnapps2\"),",
        "    CSP_7952_CooperCS = Source{[Name=\"CSP_7952_CooperCS\"]}[Data],",
        "    dbo_Contact_Address = CSP_7952_CooperCS{[Schema=\"dbo\",Item=\"Contact_Address\"]}[Data]",
        "in",
        "    dbo_Contact_Address"
      ],
      "isDirectQuery": true,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = Sql.Databases(\\\"cn-apps2\\\\cnapps2\\\"),\\n    CSP_7952_CooperCS = Source{[Name=\\\"CSP_7952_CooperCS\\\"]}[Data],\\n    dbo_Contact_Address = CSP_7952_CooperCS{[Schema=\\\"dbo\\\",Item=\\\"Contact_Address\\\"]}[Data]\\nin\\n    dbo_Contact_Address\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "Contact_Email",
      "lineageTag": "002ef7ce-3949-4e60-9e95-911f53d10639",
      "queryGroupId": "51fd8311-d26e-4eb7-972c-874a7fd9d6a2",
      "text": [
        "let",
        "    Source = Sql.Databases(\"cn-apps2\\cnapps2\"),",
        "    CSP_7952_CooperCS = Source{[Name=\"CSP_7952_CooperCS\"]}[Data],",
        "    dbo_Contact_Email = CSP_7952_CooperCS{[Schema=\"dbo\",Item=\"Contact_Email\"]}[Data]",
        "in",
        "    dbo_Contact_Email"
      ],
      "isDirectQuery": true,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = Sql.Databases(\\\"cn-apps2\\\\cnapps2\\\"),\\n    CSP_7952_CooperCS = Source{[Name=\\\"CSP_7952_CooperCS\\\"]}[Data],\\n    dbo_Contact_Email = CSP_7952_CooperCS{[Schema=\\\"dbo\\\",Item=\\\"Contact_Email\\\"]}[Data]\\nin\\n    dbo_Contact_Email\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "Engagement_View",
      "lineageTag": "e6ebee4b-8117-4056-8667-4940cc2c6b4a",
      "queryGroupId": "51fd8311-d26e-4eb7-972c-874a7fd9d6a2",
      "text": [
        "let",
        "    Source = Sql.Databases(\"cn-apps2\\cnapps2\"),",
        "    CSP_7952_CooperCS = Source{[Name=\"CSP_7952_CooperCS\"]}[Data],",
        "    dbo_Engagement_View = CSP_7952_CooperCS{[Schema=\"dbo\",Item=\"Engagement_View\"]}[Data],",
        "    #\"Merged Queries\" = Table.NestedJoin(dbo_Engagement_View, {\"biller__staff_KEY\"}, Staff, {\"staff_KEY\"}, \"Staff\", JoinKind.LeftOuter),",
        "    #\"Expanded Staff\" = Table.ExpandTableColumn(#\"Merged Queries\", \"Staff\", {\"staff_id\"}, {\"biller__staff_id\"})",
        "in",
        "    #\"Expanded Staff\""
      ],
      "isDirectQuery": true,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = Sql.Databases(\\\"cn-apps2\\\\cnapps2\\\"),\\n    CSP_7952_CooperCS = Source{[Name=\\\"CSP_7952_CooperCS\\\"]}[Data],\\n    dbo_Engagement_View = CSP_7952_CooperCS{[Schema=\\\"dbo\\\",Item=\\\"Engagement_View\\\"]}[Data],\\n    #\\\"Merged Queries\\\" = Table.NestedJoin(dbo_Engagement_View, {\\\"biller__staff_KEY\\\"}, Staff, {\\\"staff_KEY\\\"}, \\\"Staff\\\", JoinKind.LeftOuter),\\n    #\\\"Expanded Staff\\\" = Table.ExpandTableColumn(#\\\"Merged Queries\\\", \\\"Staff\\\", {\\\"staff_id\\\"}, {\\\"biller__staff_id\\\"})\\nin\\n    #\\\"Expanded Staff\\\"\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "History_Of_Client_View",
      "lineageTag": "9f4ab6b6-8461-42a9-b067-1dbab5feb61a",
      "queryGroupId": "51fd8311-d26e-4eb7-972c-874a7fd9d6a2",
      "text": [
        "let",
        "    Source = Sql.Database(\"cn-apps2\\cnapps2\", \"CSP_7952_CooperCS\"),",
        "    dbo_History_Of_Client_View = Source{[Schema=\"dbo\",Item=\"History_Of_Client_View\"]}[Data]",
        "in",
        "    dbo_History_Of_Client_View"
      ],
      "isDirectQuery": true,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = Sql.Database(\\\"cn-apps2\\\\cnapps2\\\", \\\"CSP_7952_CooperCS\\\"),\\n    dbo_History_Of_Client_View = Source{[Schema=\\\"dbo\\\",Item=\\\"History_Of_Client_View\\\"]}[Data]\\nin\\n    dbo_History_Of_Client_View\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "Invoice_View (AR)",
      "lineageTag": "9104213f-2af5-4745-9dfe-9eb206ba7007",
      "queryGroupId": "51fd8311-d26e-4eb7-972c-874a7fd9d6a2",
      "text": [
        "let",
        "    Source = Sql.Databases(\"cn-apps2\\cnapps2\"),",
        "    CSP_7952_CooperCS = Source{[Name=\"CSP_7952_CooperCS\"]}[Data],",
        "    dbo_Invoice_View = CSP_7952_CooperCS{[Schema=\"dbo\",Item=\"Invoice_View\"]}[Data]",
        "in",
        "    dbo_Invoice_View"
      ],
      "isDirectQuery": true,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = Sql.Databases(\\\"cn-apps2\\\\cnapps2\\\"),\\n    CSP_7952_CooperCS = Source{[Name=\\\"CSP_7952_CooperCS\\\"]}[Data],\\n    dbo_Invoice_View = CSP_7952_CooperCS{[Schema=\\\"dbo\\\",Item=\\\"Invoice_View\\\"]}[Data]\\nin\\n    dbo_Invoice_View\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "Invoice_View (Collection)",
      "lineageTag": "effb0838-7c6c-45ff-92b6-001998ed236b",
      "queryGroupId": "51fd8311-d26e-4eb7-972c-874a7fd9d6a2",
      "text": [
        "let",
        "    Source = Sql.Databases(\"cn-apps2\\cnapps2\"),",
        "    CSP_7952_CooperCS = Source{[Name=\"CSP_7952_CooperCS\"]}[Data],",
        "    dbo_Invoice_View = CSP_7952_CooperCS{[Schema=\"dbo\",Item=\"Invoice_View\"]}[Data],",
        "    invoice_format_compressed = CSP_7952_CooperCS{[Schema=\"dbo\",Item=\"Invoice_View\"]}[Data],",
        "    #\"Merged Biller\" = Table.NestedJoin(invoice_format_compressed, {\"billed__staff_KEY\"}, Staff, {\"staff_KEY\"}, \"Staff\", JoinKind.LeftOuter),",
        "    #\"Expanded Staff\" = Table.ExpandTableColumn(#\"Merged Biller\", \"Staff\", {\"description\"}, {\"billed__staff_description\"}),",
        "    #\"Merged Approver\" = Table.NestedJoin(#\"Expanded Staff\", {\"approved__staff_KEY\"}, Staff, {\"staff_KEY\"}, \"Staff\", JoinKind.LeftOuter),",
        "    #\"Expanded Staff1\" = Table.ExpandTableColumn(#\"Merged Approver\", \"Staff\", {\"description\"}, {\"approved__staff_description\"})",
        "in",
        "    #\"Expanded Staff1\""
      ],
      "isDirectQuery": true,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = Sql.Databases(\\\"cn-apps2\\\\cnapps2\\\"),\\n    CSP_7952_CooperCS = Source{[Name=\\\"CSP_7952_CooperCS\\\"]}[Data],\\n    dbo_Invoice_View = CSP_7952_CooperCS{[Schema=\\\"dbo\\\",Item=\\\"Invoice_View\\\"]}[Data],\\n    invoice_format_compressed = CSP_7952_CooperCS{[Schema=\\\"dbo\\\",Item=\\\"Invoice_View\\\"]}[Data],\\n    #\\\"Merged Biller\\\" = Table.NestedJoin(invoice_format_compressed, {\\\"billed__staff_KEY\\\"}, Staff, {\\\"staff_KEY\\\"}, \\\"Staff\\\", JoinKind.LeftOuter),\\n    #\\\"Expanded Staff\\\" = Table.ExpandTableColumn(#\\\"Merged Biller\\\", \\\"Staff\\\", {\\\"description\\\"}, {\\\"billed__staff_description\\\"}),\\n    #\\\"Merged Approver\\\" = Table.NestedJoin(#\\\"Expanded Staff\\\", {\\\"approved__staff_KEY\\\"}, Staff, {\\\"staff_KEY\\\"}, \\\"Staff\\\", JoinKind.LeftOuter),\\n    #\\\"Expanded Staff1\\\" = Table.ExpandTableColumn(#\\\"Merged Approver\\\", \\\"Staff\\\", {\\\"description\\\"}, {\\\"approved__staff_description\\\"})\\nin\\n    #\\\"Expanded Staff1\\\"\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Exception",
      "isHidden": false
    },
    {
      "name": "Invoice_WIP_Pending_Lookup",
      "lineageTag": "25843ed3-0def-45c6-a0b4-b72ca78d6360",
      "queryGroupId": "51fd8311-d26e-4eb7-972c-874a7fd9d6a2",
      "text": [
        "let",
        "    Source = Sql.Databases(\"cn-apps2\\cnapps2\"),",
        "    CSP_7952_CooperCS = Source{[Name=\"CSP_7952_CooperCS\"]}[Data],",
        "    dbo_Sheet_Entry_View = CSP_7952_CooperCS{[Schema=\"dbo\",Item=\"Sheet_Entry_View\"]}[Data],",
        "    // Filtered rows to get just time and rows that have a posted_open_amount",
        "    #\"Filtered Rows\" = Table.SelectRows(dbo_Sheet_Entry_View, each ([activity__activity_class_KEY] = 1) and ([posted_open_amount] <> 0)),",
        "    #\"Grouped Rows\" = Table.Group(#\"Filtered Rows\", {\"client_KEY\", \"client__client_id\", \"client__description\"}, {{\"posted_open_amount\", each List.Sum([posted_open_amount]), type nullable number}})",
        "in",
        "    #\"Grouped Rows\""
      ],
      "isDirectQuery": true,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = Sql.Databases(\\\"cn-apps2\\\\cnapps2\\\"),\\n    CSP_7952_CooperCS = Source{[Name=\\\"CSP_7952_CooperCS\\\"]}[Data],\\n    dbo_Sheet_Entry_View = CSP_7952_CooperCS{[Schema=\\\"dbo\\\",Item=\\\"Sheet_Entry_View\\\"]}[Data],\\n    // Filtered rows to get just time and rows that have a posted_open_amount\\n    #\\\"Filtered Rows\\\" = Table.SelectRows(dbo_Sheet_Entry_View, each ([activity__activity_class_KEY] = 1) and ([posted_open_amount] <> 0)),\\n    #\\\"Grouped Rows\\\" = Table.Group(#\\\"Filtered Rows\\\", {\\\"client_KEY\\\", \\\"client__client_id\\\", \\\"client__description\\\"}, {{\\\"posted_open_amount\\\", each List.Sum([posted_open_amount]), type nullable number}})\\nin\\n    #\\\"Grouped Rows\\\"\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "Ledger_Entry_View (AR)",
      "lineageTag": "841c0e55-6e2b-471f-862c-75d93641faa0",
      "queryGroupId": "51fd8311-d26e-4eb7-972c-874a7fd9d6a2",
      "text": [
        "let",
        "    Source = Sql.Databases(\"cn-apps2\\cnapps2\"),",
        "    CSP_7952_CooperCS = Source{[Name=\"CSP_7952_CooperCS\"]}[Data],",
        "    dbo_Ledger_Entry_View = CSP_7952_CooperCS{[Schema=\"dbo\",Item=\"Ledger_Entry_View\"]}[Data],",
        "    #\"Filtered Rows\" = Table.SelectRows(dbo_Ledger_Entry_View, each ([posted_open_amount] <> 0))",
        "in",
        "    #\"Filtered Rows\""
      ],
      "isDirectQuery": true,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = Sql.Databases(\\\"cn-apps2\\\\cnapps2\\\"),\\n    CSP_7952_CooperCS = Source{[Name=\\\"CSP_7952_CooperCS\\\"]}[Data],\\n    dbo_Ledger_Entry_View = CSP_7952_CooperCS{[Schema=\\\"dbo\\\",Item=\\\"Ledger_Entry_View\\\"]}[Data],\\n    #\\\"Filtered Rows\\\" = Table.SelectRows(dbo_Ledger_Entry_View, each ([posted_open_amount] <> 0))\\nin\\n    #\\\"Filtered Rows\\\"\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "Ledger_Entry_View (Collection)",
      "lineageTag": "c65cf15f-e9a6-450b-8c3e-75ce6a76adfa",
      "queryGroupId": "51fd8311-d26e-4eb7-972c-874a7fd9d6a2",
      "text": [
        "let",
        "    Source = Sql.Databases(\"cn-apps2\\cnapps2\"),",
        "    CSP_7952_CooperCS = Source{[Name=\"CSP_7952_CooperCS\"]}[Data],",
        "    dbo_Ledger_Entry_View = CSP_7952_CooperCS{[Schema=\"dbo\",Item=\"Ledger_Entry_View\"]}[Data],",
        "    // // It appears these six types of ledger entries are the only ones that matter when calculating collections.",
        "    // // Ledger entries have a \"Normal Sign\" when entered to the Amount column. Invoices are seen as a positive amount, and payments are seen as a negative amount. Therefore, in order to get the \"Amount\" of payments we need to multiply by -1.",
        "    // // However, the final two types in the defined list is not really a payment.  NSF means \"Non-Sufficient Funds\" and CCR means \"Credit-Card Returns\".",
        "    // // These come into the ledger as a positive amount (Meant to take away from the payment total) as these amounts were not actually processed.",
        "    // // Because these normal signs are different and the NSF/CCR amounts is meant to negate the payments we will multiply it by -1 as well to make sure it comes through as a negative while the others come through as positive.",
        "    // ",
        "    // // This corresponds to the \"Collected Amount\" column of the Collection Summary report.",
        "    #\"Added collected_amount\" = Table.AddColumn(dbo_Ledger_Entry_View, \"collected_amount\", each if List.Contains({\"CA\", \"CC\", \"CHK\", \"ACH\", \"NSF\", \"CCR\"}, [ledger_entry_type__ledger_entry_type_id]) then ",
        "[amount] * -1 else ",
        "0, type number),",
        "    #\"Added Custom\" = Table.AddColumn(#\"Added collected_amount\", \"FY\", each if Date.Month([control_date]) >= 7 then Date.Year([control_date]) + 1 else Date.Year([control_date])),",
        "    #\"Added Custom1\" = Table.AddColumn(#\"Added Custom\", \"client_partner_id\", each Text.From([client_KEY]) & \"-\" & Text.From([client__partner__staff__staff_id])),",
        "    // This is meant to help with the Collections lookup, to be able to view the related client group collection amounts.",
        "    #\"Merged Related Client Group\" = Table.NestedJoin(#\"Added Custom1\", {\"client_KEY\"}, RCG, {\"row_KEY\"}, \"RCG\", JoinKind.LeftOuter),",
        "    #\"Expanded RCG\" = Table.ExpandTableColumn(#\"Merged Related Client Group\", \"RCG\", {\"related_client_group_id\", \"related_client_group__description\"}, {\"related_client_group_id\", \"related_client_group__description\"}),",
        "    // Meant to show the first day of the month in which the control_date is found.  Helps to create visuals aggregated by month",
        "    #\"Added control_month\" = Table.AddColumn(#\"Expanded RCG\", \"control_month\", each Date.StartOfMonth([control_date]), type date)",
        "in",
        "    #\"Added control_month\""
      ],
      "isDirectQuery": true,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = Sql.Databases(\\\"cn-apps2\\\\cnapps2\\\"),\\n    CSP_7952_CooperCS = Source{[Name=\\\"CSP_7952_CooperCS\\\"]}[Data],\\n    dbo_Ledger_Entry_View = CSP_7952_CooperCS{[Schema=\\\"dbo\\\",Item=\\\"Ledger_Entry_View\\\"]}[Data],\\n    // // It appears these six types of ledger entries are the only ones that matter when calculating collections.\\n    // // Ledger entries have a \\\"Normal Sign\\\" when entered to the Amount column. Invoices are seen as a positive amount, and payments are seen as a negative amount. Therefore, in order to get the \\\"Amount\\\" of payments we need to multiply by -1.\\n    // // However, the final two types in the defined list is not really a payment.  NSF means \\\"Non-Sufficient Funds\\\" and CCR means \\\"Credit-Card Returns\\\".\\n    // // These come into the ledger as a positive amount (Meant to take away from the payment total) as these amounts were not actually processed.\\n    // // Because these normal signs are different and the NSF/CCR amounts is meant to negate the payments we will multiply it by -1 as well to make sure it comes through as a negative while the others come through as positive.\\n    // \\n    // // This corresponds to the \\\"Collected Amount\\\" column of the Collection Summary report.\\n    #\\\"Added collected_amount\\\" = Table.AddColumn(dbo_Ledger_Entry_View, \\\"collected_amount\\\", each if List.Contains({\\\"CA\\\", \\\"CC\\\", \\\"CHK\\\", \\\"ACH\\\", \\\"NSF\\\", \\\"CCR\\\"}, [ledger_entry_type__ledger_entry_type_id]) then \\n[amount] * -1 else \\n0, type number),\\n    #\\\"Added Custom\\\" = Table.AddColumn(#\\\"Added collected_amount\\\", \\\"FY\\\", each if Date.Month([control_date]) >= 7 then Date.Year([control_date]) + 1 else Date.Year([control_date])),\\n    #\\\"Added Custom1\\\" = Table.AddColumn(#\\\"Added Custom\\\", \\\"client_partner_id\\\", each Text.From([client_KEY]) & \\\"-\\\" & Text.From([client__partner__staff__staff_id])),\\n    // This is meant to help with the Collections lookup, to be able to view the related client group collection amounts.\\n    #\\\"Merged Related Client Group\\\" = Table.NestedJoin(#\\\"Added Custom1\\\", {\\\"client_KEY\\\"}, RCG, {\\\"row_KEY\\\"}, \\\"RCG\\\", JoinKind.LeftOuter),\\n    #\\\"Expanded RCG\\\" = Table.ExpandTableColumn(#\\\"Merged Related Client Group\\\", \\\"RCG\\\", {\\\"related_client_group_id\\\", \\\"related_client_group__description\\\"}, {\\\"related_client_group_id\\\", \\\"related_client_group__description\\\"}),\\n    // Meant to show the first day of the month in which the control_date is found.  Helps to create visuals aggregated by month\\n    #\\\"Added control_month\\\" = Table.AddColumn(#\\\"Expanded RCG\\\", \\\"control_month\\\", each Date.StartOfMonth([control_date]), type date)\\nin\\n    #\\\"Added control_month\\\"\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "Ledger_Entry_Application_View",
      "lineageTag": "e1ad86c5-4c78-4588-9c78-e87407726069",
      "queryGroupId": "51fd8311-d26e-4eb7-972c-874a7fd9d6a2",
      "text": [
        "let",
        "    Source = Sql.Databases(\"cn-apps2\\cnapps2\"),",
        "    CSP_7952_CooperCS = Source{[Name=\"CSP_7952_CooperCS\"]}[Data],",
        "    dbo_Ledger_Entry_Application_View = CSP_7952_CooperCS{[Schema=\"dbo\",Item=\"Ledger_Entry_Application_View\"]}[Data],",
        "    // This column returns the amount of collections that were applied to service charges.",
        "    #\"Added applied_service_charges\" = Table.AddColumn(dbo_Ledger_Entry_Application_View, \"applied_service_charges\", each if [from__ledger_entry__ledger_entry_type_KEY] = 2 and [to__ledger_entry__ledger_entry_type_KEY] <> 7 and [to__ledger_entry__ledger_entry_type_KEY] <> 5 then [applied_amount] else null, type number),",
        "    // The column returns the amount of collections applied to debit memos.",
        "    #\"Added applied_debit_memos\" = Table.AddColumn(#\"Added applied_service_charges\", \"applied_debit_memos\", each if [from__ledger_entry__ledger_entry_type_KEY] = 3 and [to__ledger_entry__ledger_entry_type_KEY] <> 7 and [to__ledger_entry__ledger_entry_type_KEY] <> 5 then [applied_amount] else null, type number),",
        "    // This column returns the amount of collections applied to invoices.",
        "    #\"Added applied_invoices\" = Table.AddColumn(#\"Added applied_debit_memos\", \"applied_invoices\", each if [from__ledger_entry__ledger_entry_type_KEY] = 1 and [to__ledger_entry__ledger_entry_type_KEY] <> 7 and [to__ledger_entry__ledger_entry_type_KEY] <> 5 then [applied_amount] else null, type number)",
        "in",
        "    #\"Added applied_invoices\""
      ],
      "isDirectQuery": true,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = Sql.Databases(\\\"cn-apps2\\\\cnapps2\\\"),\\n    CSP_7952_CooperCS = Source{[Name=\\\"CSP_7952_CooperCS\\\"]}[Data],\\n    dbo_Ledger_Entry_Application_View = CSP_7952_CooperCS{[Schema=\\\"dbo\\\",Item=\\\"Ledger_Entry_Application_View\\\"]}[Data],\\n    // This column returns the amount of collections that were applied to service charges.\\n    #\\\"Added applied_service_charges\\\" = Table.AddColumn(dbo_Ledger_Entry_Application_View, \\\"applied_service_charges\\\", each if [from__ledger_entry__ledger_entry_type_KEY] = 2 and [to__ledger_entry__ledger_entry_type_KEY] <> 7 and [to__ledger_entry__ledger_entry_type_KEY] <> 5 then [applied_amount] else null, type number),\\n    // The column returns the amount of collections applied to debit memos.\\n    #\\\"Added applied_debit_memos\\\" = Table.AddColumn(#\\\"Added applied_service_charges\\\", \\\"applied_debit_memos\\\", each if [from__ledger_entry__ledger_entry_type_KEY] = 3 and [to__ledger_entry__ledger_entry_type_KEY] <> 7 and [to__ledger_entry__ledger_entry_type_KEY] <> 5 then [applied_amount] else null, type number),\\n    // This column returns the amount of collections applied to invoices.\\n    #\\\"Added applied_invoices\\\" = Table.AddColumn(#\\\"Added applied_debit_memos\\\", \\\"applied_invoices\\\", each if [from__ledger_entry__ledger_entry_type_KEY] = 1 and [to__ledger_entry__ledger_entry_type_KEY] <> 7 and [to__ledger_entry__ledger_entry_type_KEY] <> 5 then [applied_amount] else null, type number)\\nin\\n    #\\\"Added applied_invoices\\\"\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "Project_View",
      "lineageTag": "af81941f-b478-48af-8d7f-4fe15395a5cd",
      "queryGroupId": "51fd8311-d26e-4eb7-972c-874a7fd9d6a2",
      "text": [
        "let",
        "    Source = Sql.Databases(\"cn-apps2\\cnapps2\"),",
        "    CSP_7952_CooperCS = Source{[Name=\"CSP_7952_CooperCS\"]}[Data],",
        "    dbo_Project_View = CSP_7952_CooperCS{[Schema=\"dbo\",Item=\"Project_View\"]}[Data]",
        "in",
        "    dbo_Project_View"
      ],
      "isDirectQuery": true,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = Sql.Databases(\\\"cn-apps2\\\\cnapps2\\\"),\\n    CSP_7952_CooperCS = Source{[Name=\\\"CSP_7952_CooperCS\\\"]}[Data],\\n    dbo_Project_View = CSP_7952_CooperCS{[Schema=\\\"dbo\\\",Item=\\\"Project_View\\\"]}[Data]\\nin\\n    dbo_Project_View\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "Sheet_Entry_View",
      "lineageTag": "bb69a6bb-f5d7-492b-abd8-85e90bfb91a3",
      "queryGroupId": "51fd8311-d26e-4eb7-972c-874a7fd9d6a2",
      "text": [
        "let",
        "    Source = Sql.Databases(\"cn-apps2\\cnapps2\"),",
        "    CSP_7952_CooperCS = Source{[Name=\"CSP_7952_CooperCS\"]}[Data],",
        "    dbo_Sheet_Entry_View = CSP_7952_CooperCS{[Schema=\"dbo\",Item=\"Sheet_Entry_View\"]}[Data],",
        "    // Finds the start of the week for the Sheet Entry Date.  Returns a Monday as the start of the week.",
        "    #\"Inserted sheet_week\" = Table.AddColumn(dbo_Sheet_Entry_View, \"sheet_week\", each Date.StartOfWeek([sheet_date], Day.Monday), type date),",
        "    // Finds the start of the week for the Sheet Entry Date.  Returns a Monday as the start of the week.",
        "    #\"Inserted sheet_month\" = Table.AddColumn(#\"Inserted sheet_week\", \"sheet_month\", each Date.StartOfMonth([sheet_date]), type date),",
        "    // returns the year as an int from the sheet_date column.  This will allow us to build graphs using just the year.",
        "    #\"Inserted sheet_year\" = Table.AddColumn(#\"Inserted sheet_month\", \"sheet_year\", each Date.Year([sheet_date]), Int64.Type),",
        "    // this column represents the year as an int for the current fy.",
        "    #\"Created sheet_year_fy\" = Table.AddColumn(#\"Inserted sheet_year\", \"sheet_year_FY\", each if Date.Month([sheet_date]) >= 7 then ",
        "Date.Year([sheet_date]) + 1 else ",
        "Date.Year([sheet_date]), Int64.Type),",
        "    #\"Added units_billable\" = Table.AddColumn(#\"Created sheet_year_fy\", \"units_billable\", each if [activity__activity_class_KEY] = 1 then [units] else 0, type number),",
        "    #\"Added units_nonbillable\" = Table.AddColumn(#\"Added units_billable\", \"units_nonbillable\", each if [activity__activity_class_KEY] = 2 then [units] else 0, type number),",
        "    #\"Added units_admin\" = Table.AddColumn(#\"Added units_nonbillable\", \"units_admin\", each if [activity__activity_class_KEY] = 3 and [activity__activity_id] <> \"PTOEMPLOYEE\" and [activity__activity_id] <> \"HOLIDAY\" then [units] else 0, type number),",
        "    #\"Added units_pto\" = Table.AddColumn(#\"Added units_admin\", \"units_pto\", each if [activity__activity_id] = \"PTOEMPLOYEE\" or [activity__activity_id] = \"HOLIDAY\" then [units] else 0, type number),",
        "    #\"Added amount_billable\" = Table.AddColumn(#\"Added units_pto\", \"amount_billable\", each if [activity__activity_class_KEY] = 1 then [amount] else 0, type number),",
        "    #\"Added amount_nonbillable\" = Table.AddColumn(#\"Added amount_billable\", \"amount_nonbillable\", each if [activity__activity_class_KEY] = 2 then [amount] else 0, type number),",
        "    #\"Added amount_admin\" = Table.AddColumn(#\"Added amount_nonbillable\", \"amount_admin\", each if [activity__activity_class_KEY] = 3 and [activity__activity_id] <> \"PTOEMPLOYEE\" and [activity__activity_id] <> \"HOLIDAY\" then [amount] else 0, type number),",
        "    #\"Added amount_pto\" = Table.AddColumn(#\"Added amount_admin\", \"amount_pto\", each if [activity__activity_id] = \"PTOEMPLOYEE\" or [activity__activity_id] = \"HOLIDAY\" then [amount] else 0, type number)",
        "in",
        "    #\"Added amount_pto\""
      ],
      "isDirectQuery": true,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = Sql.Databases(\\\"cn-apps2\\\\cnapps2\\\"),\\n    CSP_7952_CooperCS = Source{[Name=\\\"CSP_7952_CooperCS\\\"]}[Data],\\n    dbo_Sheet_Entry_View = CSP_7952_CooperCS{[Schema=\\\"dbo\\\",Item=\\\"Sheet_Entry_View\\\"]}[Data],\\n    // Finds the start of the week for the Sheet Entry Date.  Returns a Monday as the start of the week.\\n    #\\\"Inserted sheet_week\\\" = Table.AddColumn(dbo_Sheet_Entry_View, \\\"sheet_week\\\", each Date.StartOfWeek([sheet_date], Day.Monday), type date),\\n    // Finds the start of the week for the Sheet Entry Date.  Returns a Monday as the start of the week.\\n    #\\\"Inserted sheet_month\\\" = Table.AddColumn(#\\\"Inserted sheet_week\\\", \\\"sheet_month\\\", each Date.StartOfMonth([sheet_date]), type date),\\n    // returns the year as an int from the sheet_date column.  This will allow us to build graphs using just the year.\\n    #\\\"Inserted sheet_year\\\" = Table.AddColumn(#\\\"Inserted sheet_month\\\", \\\"sheet_year\\\", each Date.Year([sheet_date]), Int64.Type),\\n    // this column represents the year as an int for the current fy.\\n    #\\\"Created sheet_year_fy\\\" = Table.AddColumn(#\\\"Inserted sheet_year\\\", \\\"sheet_year_FY\\\", each if Date.Month([sheet_date]) >= 7 then \\nDate.Year([sheet_date]) + 1 else \\nDate.Year([sheet_date]), Int64.Type),\\n    #\\\"Added units_billable\\\" = Table.AddColumn(#\\\"Created sheet_year_fy\\\", \\\"units_billable\\\", each if [activity__activity_class_KEY] = 1 then [units] else 0, type number),\\n    #\\\"Added units_nonbillable\\\" = Table.AddColumn(#\\\"Added units_billable\\\", \\\"units_nonbillable\\\", each if [activity__activity_class_KEY] = 2 then [units] else 0, type number),\\n    #\\\"Added units_admin\\\" = Table.AddColumn(#\\\"Added units_nonbillable\\\", \\\"units_admin\\\", each if [activity__activity_class_KEY] = 3 and [activity__activity_id] <> \\\"PTOEMPLOYEE\\\" and [activity__activity_id] <> \\\"HOLIDAY\\\" then [units] else 0, type number),\\n    #\\\"Added units_pto\\\" = Table.AddColumn(#\\\"Added units_admin\\\", \\\"units_pto\\\", each if [activity__activity_id] = \\\"PTOEMPLOYEE\\\" or [activity__activity_id] = \\\"HOLIDAY\\\" then [units] else 0, type number),\\n    #\\\"Added amount_billable\\\" = Table.AddColumn(#\\\"Added units_pto\\\", \\\"amount_billable\\\", each if [activity__activity_class_KEY] = 1 then [amount] else 0, type number),\\n    #\\\"Added amount_nonbillable\\\" = Table.AddColumn(#\\\"Added amount_billable\\\", \\\"amount_nonbillable\\\", each if [activity__activity_class_KEY] = 2 then [amount] else 0, type number),\\n    #\\\"Added amount_admin\\\" = Table.AddColumn(#\\\"Added amount_nonbillable\\\", \\\"amount_admin\\\", each if [activity__activity_class_KEY] = 3 and [activity__activity_id] <> \\\"PTOEMPLOYEE\\\" and [activity__activity_id] <> \\\"HOLIDAY\\\" then [amount] else 0, type number),\\n    #\\\"Added amount_pto\\\" = Table.AddColumn(#\\\"Added amount_admin\\\", \\\"amount_pto\\\", each if [activity__activity_id] = \\\"PTOEMPLOYEE\\\" or [activity__activity_id] = \\\"HOLIDAY\\\" then [amount] else 0, type number)\\nin\\n    #\\\"Added amount_pto\\\"\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "Staff",
      "lineageTag": "b020efe0-dc88-416a-8b51-5814a081d91f",
      "queryGroupId": "51fd8311-d26e-4eb7-972c-874a7fd9d6a2",
      "text": [
        "let",
        "    Source = Sql.Databases(\"cn-apps2\\cnapps2\"),",
        "    CSP_7952_CooperCS = Source{[Name=\"CSP_7952_CooperCS\"]}[Data],",
        "    dbo_Staff = CSP_7952_CooperCS{[Schema=\"dbo\",Item=\"Staff\"]}[Data],",
        "    #\"Expanded Department\" = Table.ExpandRecordColumn(dbo_Staff, \"Department\", {\"department_id\", \"description\"}, {\"department_id\", \"department__description\"}),",
        "    #\"Expanded Office\" = Table.ExpandRecordColumn(#\"Expanded Department\", \"Office\", {\"office_id\", \"description\"}, {\"office_id\", \"office__description\"}),",
        "    #\"Merged Queries\" = Table.NestedJoin(#\"Expanded Office\", {\"contact_KEY\"}, Staff_Email, {\"contact_KEY\"}, \"Staff_Email\", JoinKind.LeftOuter),",
        "    #\"Expanded Staff_Email\" = Table.ExpandTableColumn(#\"Merged Queries\", \"Staff_Email\", {\"email\"}, {\"staff__email\"}),",
        "    #\"Merged Queries1\" = Table.NestedJoin(#\"Expanded Staff_Email\", {\"staff_KEY\"}, client_relations, {\"row_KEY\"}, \"client_relations\", JoinKind.LeftOuter),",
        "    #\"Expanded client_relations\" = Table.ExpandTableColumn(#\"Merged Queries1\", \"client_relations\", {\"custom_value\"}, {\"client_relations\"}),",
        "    #\"Merged bsc_participants\" = Table.NestedJoin(#\"Expanded client_relations\", {\"staff_KEY\"}, bsc_participants, {\"row_KEY\"}, \"bsc_participants\", JoinKind.LeftOuter),",
        "    #\"Expanded bsc_participants\" = Table.ExpandTableColumn(#\"Merged bsc_participants\", \"bsc_participants\", {\"custom_value\"}, {\"bsc_participants\"}),",
        "    // This will place the staff member's current active account ID on the previous accounts.  This will allow us to get the current desciption to effectively combine the accounts with on description.",
        "    #\"Merged staff_primary_id\" = Table.NestedJoin(#\"Expanded bsc_participants\", {\"staff_KEY\"}, staff_primary_id, {\"row_KEY\"}, \"staff_primary_id\", JoinKind.LeftOuter),",
        "    #\"Expanded staff_primary_id\" = Table.ExpandTableColumn(#\"Merged staff_primary_id\", \"staff_primary_id\", {\"custom_value\"}, {\"staff_primary_id\"}),",
        "    // This column will switch between the primary id (if there is one) and the regular staff id (if there is not primary).  This will allow us to lookup the most recent staff description.",
        "    #\"Created staff_primary_id_lookup\" = Table.AddColumn(#\"Expanded staff_primary_id\", \"staff_primary_id_lookup\", each if [staff_primary_id] = null then [staff_id] else [staff_primary_id]),",
        "    // This will allow us to lookup the description that is most recent for each staff member",
        "    #\"Merged to Staff to Find Description\" = Table.NestedJoin(#\"Created staff_primary_id_lookup\", {\"staff_primary_id_lookup\"}, #\"Created staff_primary_id_lookup\", {\"staff_id\"}, \"Created staff_primary_id_lookup\", JoinKind.LeftOuter),",
        "    #\"Expanded Created staff_primary_id_lookup\" = Table.ExpandTableColumn(#\"Merged to Staff to Find Description\", \"Created staff_primary_id_lookup\", {\"staff_KEY\", \"description\"}, {\"primary_staff_KEY\", \"primary_staff_description\"})",
        "in",
        "    #\"Expanded Created staff_primary_id_lookup\""
      ],
      "isDirectQuery": true,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = Sql.Databases(\\\"cn-apps2\\\\cnapps2\\\"),\\n    CSP_7952_CooperCS = Source{[Name=\\\"CSP_7952_CooperCS\\\"]}[Data],\\n    dbo_Staff = CSP_7952_CooperCS{[Schema=\\\"dbo\\\",Item=\\\"Staff\\\"]}[Data],\\n    #\\\"Expanded Department\\\" = Table.ExpandRecordColumn(dbo_Staff, \\\"Department\\\", {\\\"department_id\\\", \\\"description\\\"}, {\\\"department_id\\\", \\\"department__description\\\"}),\\n    #\\\"Expanded Office\\\" = Table.ExpandRecordColumn(#\\\"Expanded Department\\\", \\\"Office\\\", {\\\"office_id\\\", \\\"description\\\"}, {\\\"office_id\\\", \\\"office__description\\\"}),\\n    #\\\"Merged Queries\\\" = Table.NestedJoin(#\\\"Expanded Office\\\", {\\\"contact_KEY\\\"}, Staff_Email, {\\\"contact_KEY\\\"}, \\\"Staff_Email\\\", JoinKind.LeftOuter),\\n    #\\\"Expanded Staff_Email\\\" = Table.ExpandTableColumn(#\\\"Merged Queries\\\", \\\"Staff_Email\\\", {\\\"email\\\"}, {\\\"staff__email\\\"}),\\n    #\\\"Merged Queries1\\\" = Table.NestedJoin(#\\\"Expanded Staff_Email\\\", {\\\"staff_KEY\\\"}, client_relations, {\\\"row_KEY\\\"}, \\\"client_relations\\\", JoinKind.LeftOuter),\\n    #\\\"Expanded client_relations\\\" = Table.ExpandTableColumn(#\\\"Merged Queries1\\\", \\\"client_relations\\\", {\\\"custom_value\\\"}, {\\\"client_relations\\\"}),\\n    #\\\"Merged bsc_participants\\\" = Table.NestedJoin(#\\\"Expanded client_relations\\\", {\\\"staff_KEY\\\"}, bsc_participants, {\\\"row_KEY\\\"}, \\\"bsc_participants\\\", JoinKind.LeftOuter),\\n    #\\\"Expanded bsc_participants\\\" = Table.ExpandTableColumn(#\\\"Merged bsc_participants\\\", \\\"bsc_participants\\\", {\\\"custom_value\\\"}, {\\\"bsc_participants\\\"}),\\n    // This will place the staff member's current active account ID on the previous accounts.  This will allow us to get the current desciption to effectively combine the accounts with on description.\\n    #\\\"Merged staff_primary_id\\\" = Table.NestedJoin(#\\\"Expanded bsc_participants\\\", {\\\"staff_KEY\\\"}, staff_primary_id, {\\\"row_KEY\\\"}, \\\"staff_primary_id\\\", JoinKind.LeftOuter),\\n    #\\\"Expanded staff_primary_id\\\" = Table.ExpandTableColumn(#\\\"Merged staff_primary_id\\\", \\\"staff_primary_id\\\", {\\\"custom_value\\\"}, {\\\"staff_primary_id\\\"}),\\n    // This column will switch between the primary id (if there is one) and the regular staff id (if there is not primary).  This will allow us to lookup the most recent staff description.\\n    #\\\"Created staff_primary_id_lookup\\\" = Table.AddColumn(#\\\"Expanded staff_primary_id\\\", \\\"staff_primary_id_lookup\\\", each if [staff_primary_id] = null then [staff_id] else [staff_primary_id]),\\n    // This will allow us to lookup the description that is most recent for each staff member\\n    #\\\"Merged to Staff to Find Description\\\" = Table.NestedJoin(#\\\"Created staff_primary_id_lookup\\\", {\\\"staff_primary_id_lookup\\\"}, #\\\"Created staff_primary_id_lookup\\\", {\\\"staff_id\\\"}, \\\"Created staff_primary_id_lookup\\\", JoinKind.LeftOuter),\\n    #\\\"Expanded Created staff_primary_id_lookup\\\" = Table.ExpandTableColumn(#\\\"Merged to Staff to Find Description\\\", \\\"Created staff_primary_id_lookup\\\", {\\\"staff_KEY\\\", \\\"description\\\"}, {\\\"primary_staff_KEY\\\", \\\"primary_staff_description\\\"})\\nin\\n    #\\\"Expanded Created staff_primary_id_lookup\\\"\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "Staff_Email",
      "lineageTag": "a0519253-289e-4fe1-9732-cc81992bbdc0",
      "queryGroupId": "51fd8311-d26e-4eb7-972c-874a7fd9d6a2",
      "text": [
        "let",
        "    Source = Sql.Databases(\"cn-apps2\\cnapps2\"),",
        "    CSP_7952_CooperCS = Source{[Name=\"CSP_7952_CooperCS\"]}[Data],",
        "    dbo_Contact_Email = CSP_7952_CooperCS{[Schema=\"dbo\",Item=\"Contact_Email\"]}[Data],",
        "    #\"Filtered rows\" = Table.SelectRows(dbo_Contact_Email, each Text.EndsWith([email], \"@coopernorman.com\") and [email] <> \"invoicing@coopernorman.com\"),",
        "    #\"Grouped Rows\" = Table.Group(#\"Filtered rows\", {\"contact_KEY\"}, {{\"email\", each List.Min([email]), type text}})",
        "in",
        "    #\"Grouped Rows\""
      ],
      "isDirectQuery": true,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = Sql.Databases(\\\"cn-apps2\\\\cnapps2\\\"),\\n    CSP_7952_CooperCS = Source{[Name=\\\"CSP_7952_CooperCS\\\"]}[Data],\\n    dbo_Contact_Email = CSP_7952_CooperCS{[Schema=\\\"dbo\\\",Item=\\\"Contact_Email\\\"]}[Data],\\n    #\\\"Filtered rows\\\" = Table.SelectRows(dbo_Contact_Email, each Text.EndsWith([email], \\\"@coopernorman.com\\\") and [email] <> \\\"invoicing@coopernorman.com\\\"),\\n    #\\\"Grouped Rows\\\" = Table.Group(#\\\"Filtered rows\\\", {\\\"contact_KEY\\\"}, {{\\\"email\\\", each List.Min([email]), type text}})\\nin\\n    #\\\"Grouped Rows\\\"\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "Task_View",
      "lineageTag": "7fca77a0-f387-47b2-943e-c2b44c26713b",
      "queryGroupId": "51fd8311-d26e-4eb7-972c-874a7fd9d6a2",
      "text": [
        "let",
        "    Source = Sql.Databases(\"cn-apps2\\cnapps2\"),",
        "    CSP_7952_CooperCS = Source{[Name=\"CSP_7952_CooperCS\"]}[Data],",
        "    dbo_Task_View = CSP_7952_CooperCS{[Schema=\"dbo\",Item=\"Task_View\"]}[Data]",
        "in",
        "    dbo_Task_View"
      ],
      "isDirectQuery": true,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = Sql.Databases(\\\"cn-apps2\\\\cnapps2\\\"),\\n    CSP_7952_CooperCS = Source{[Name=\\\"CSP_7952_CooperCS\\\"]}[Data],\\n    dbo_Task_View = CSP_7952_CooperCS{[Schema=\\\"dbo\\\",Item=\\\"Task_View\\\"]}[Data]\\nin\\n    dbo_Task_View\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "RCG",
      "lineageTag": "b494b250-3b0c-490a-830e-d31720c4cd26",
      "description": "Related Client Group custom field",
      "queryGroupId": "0f1f8899-089c-4e71-8d18-ced9695e3f3b",
      "text": [
        "let",
        "    Source = Sql.Databases(\"cn-apps2\\cnapps2\"),",
        "    CSP_7952_CooperCS = Source{[Name=\"CSP_7952_CooperCS\"]}[Data],",
        "    dbo_Custom_Value_View = CSP_7952_CooperCS{[Schema=\"dbo\",Item=\"Custom_Value_View\"]}[Data],",
        "    #\"Filtered Rows\" = Table.SelectRows(dbo_Custom_Value_View, each [custom_field_KEY] = 59),",
        "    #\"Merged Queries\" = Table.NestedJoin(#\"Filtered Rows\", {\"custom_value__custom_grouping_KEY\"}, Custom_Grouping, {\"custom_grouping_KEY\"}, \"RCG_Custom_Grouping\", JoinKind.LeftOuter),",
        "    #\"Expanded RCG_Custom_Grouping\" = Table.ExpandTableColumn(#\"Merged Queries\", \"RCG_Custom_Grouping\", {\"custom_grouping_id\", \"description\"}, {\"related_client_group_id\", \"related_client_group__description\"})",
        "in",
        "    #\"Expanded RCG_Custom_Grouping\""
      ],
      "loadAsTableDisabled": true,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "client_relations",
      "lineageTag": "d951307f-27f3-4615-a5ba-5ea02401e187",
      "description": "Related Client Group custom field",
      "queryGroupId": "0f1f8899-089c-4e71-8d18-ced9695e3f3b",
      "text": [
        "let",
        "    Source = Sql.Databases(\"cn-apps2\\cnapps2\"),",
        "    CSP_7952_CooperCS = Source{[Name=\"CSP_7952_CooperCS\"]}[Data],",
        "    dbo_Custom_Value_View = CSP_7952_CooperCS{[Schema=\"dbo\",Item=\"Custom_Value_View\"]}[Data],",
        "    #\"Filtered Rows\" = Table.SelectRows(dbo_Custom_Value_View, each [custom_field_KEY] = 353),",
        "    #\"Merged Queries\" = Table.NestedJoin(#\"Filtered Rows\", {\"custom_value__custom_grouping_KEY\"}, Custom_Grouping, {\"custom_grouping_KEY\"}, \"RCG_Custom_Grouping\", JoinKind.LeftOuter),",
        "    #\"Expanded RCG_Custom_Grouping\" = Table.ExpandTableColumn(#\"Merged Queries\", \"RCG_Custom_Grouping\", {\"custom_grouping_id\", \"description\"}, {\"related_client_group_id\", \"related_client_group__description\"})",
        "in",
        "    #\"Expanded RCG_Custom_Grouping\""
      ],
      "loadAsTableDisabled": true,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "bsc_participants",
      "lineageTag": "b23e12eb-1eb2-408e-ab32-0673dead9ba8",
      "description": "Related Client Group custom field",
      "queryGroupId": "0f1f8899-089c-4e71-8d18-ced9695e3f3b",
      "text": [
        "let",
        "    Source = Sql.Databases(\"cn-apps2\\cnapps2\"),",
        "    CSP_7952_CooperCS = Source{[Name=\"CSP_7952_CooperCS\"]}[Data],",
        "    dbo_Custom_Value_View = CSP_7952_CooperCS{[Schema=\"dbo\",Item=\"Custom_Value_View\"]}[Data],",
        "    #\"Filtered Rows\" = Table.SelectRows(dbo_Custom_Value_View, each [custom_field_KEY] = 358),",
        "    #\"Merged Queries\" = Table.NestedJoin(#\"Filtered Rows\", {\"custom_value__custom_grouping_KEY\"}, Custom_Grouping, {\"custom_grouping_KEY\"}, \"RCG_Custom_Grouping\", JoinKind.LeftOuter),",
        "    #\"Expanded RCG_Custom_Grouping\" = Table.ExpandTableColumn(#\"Merged Queries\", \"RCG_Custom_Grouping\", {\"custom_grouping_id\", \"description\"}, {\"related_client_group_id\", \"related_client_group__description\"})",
        "in",
        "    #\"Expanded RCG_Custom_Grouping\""
      ],
      "loadAsTableDisabled": true,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "Custom_Grouping",
      "lineageTag": "513be4c5-0d71-4268-b666-29f2ed3222b3",
      "queryGroupId": "0f1f8899-089c-4e71-8d18-ced9695e3f3b",
      "text": [
        "let",
        "    Source = Sql.Databases(\"cn-apps2\\cnapps2\"),",
        "    CSP_7952_CooperCS = Source{[Name=\"CSP_7952_CooperCS\"]}[Data],",
        "    dbo_Custom_Grouping = CSP_7952_CooperCS{[Schema=\"dbo\",Item=\"Custom_Grouping\"]}[Data]",
        "in",
        "    dbo_Custom_Grouping"
      ],
      "loadAsTableDisabled": true,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "Custom_Field",
      "lineageTag": "6bc72c41-a11a-446c-a37f-4725fb27f46d",
      "queryGroupId": "0f1f8899-089c-4e71-8d18-ced9695e3f3b",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "    Source = Sql.Databases(\"cn-apps2\\cnapps2\"),",
        "    CSP_7952_CooperCS = Source{[Name=\"CSP_7952_CooperCS\"]}[Data],",
        "    dbo_Custom_Field = CSP_7952_CooperCS{[Schema=\"dbo\",Item=\"Custom_Field\"]}[Data]",
        "in",
        "    dbo_Custom_Field"
      ],
      "loadAsTableDisabled": true,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "Invoice_Biller_Checking",
      "lineageTag": "91e7f5d7-7fd2-4f3e-bddb-d88c3457c8fd",
      "text": [
        "let",
        "    Source = Sql.Databases(\"cn-apps2\\cnapps2\"),",
        "    CSP_7952_CooperCS = Source{[Name=\"CSP_7952_CooperCS\"]}[Data],",
        "    dbo_Billing_Decision_View = CSP_7952_CooperCS{[Schema=\"dbo\",Item=\"Invoice_View\"]}[Data],",
        "    #\"Merged Queries\" = Table.NestedJoin(dbo_Billing_Decision_View, {\"client_KEY\"}, Client_View, {\"client_KEY\"}, \"Client_View\", JoinKind.LeftOuter),",
        "    #\"Expanded Client_View\" = Table.ExpandTableColumn(#\"Merged Queries\", \"Client_View\", {\"partner__staff_KEY\", \"manager__staff_KEY\", \"partner_id\", \"partner__description\", \"client_partner_key\", \"manager_id\", \"manager_description\"}, {\"partner__staff_KEY\", \"manager__staff_KEY\", \"partner_id\", \"partner__description\", \"client_partner_key\", \"manager_id\", \"manager_description\"}),",
        "    #\"Merged Queries1\" = Table.NestedJoin(#\"Expanded Client_View\", {\"billed__staff_KEY\"}, Staff, {\"staff_KEY\"}, \"Staff\", JoinKind.LeftOuter),",
        "    #\"Expanded Staff\" = Table.ExpandTableColumn(#\"Merged Queries1\", \"Staff\", {\"client_relations\"}, {\"client_relations\"}),",
        "    #\"Added Custom\" = Table.AddColumn(#\"Expanded Staff\", \"Custom\", each if [billed__staff__staff_id] = [partner_id]",
        "then \"Partner\" else ",
        "if [billed__staff__staff_id] = [manager_id] ",
        "then \"Manager\" else ",
        "if [client_relations] = \"True\" ",
        "then \"CR\" else ",
        "\"Other\")",
        "in",
        "    #\"Added Custom\""
      ],
      "isDirectQuery": true,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = Sql.Databases(\\\"cn-apps2\\\\cnapps2\\\"),\\n    CSP_7952_CooperCS = Source{[Name=\\\"CSP_7952_CooperCS\\\"]}[Data],\\n    dbo_Billing_Decision_View = CSP_7952_CooperCS{[Schema=\\\"dbo\\\",Item=\\\"Invoice_View\\\"]}[Data],\\n    #\\\"Merged Queries\\\" = Table.NestedJoin(dbo_Billing_Decision_View, {\\\"client_KEY\\\"}, Client_View, {\\\"client_KEY\\\"}, \\\"Client_View\\\", JoinKind.LeftOuter),\\n    #\\\"Expanded Client_View\\\" = Table.ExpandTableColumn(#\\\"Merged Queries\\\", \\\"Client_View\\\", {\\\"partner__staff_KEY\\\", \\\"manager__staff_KEY\\\", \\\"partner_id\\\", \\\"partner__description\\\", \\\"client_partner_key\\\", \\\"manager_id\\\", \\\"manager_description\\\"}, {\\\"partner__staff_KEY\\\", \\\"manager__staff_KEY\\\", \\\"partner_id\\\", \\\"partner__description\\\", \\\"client_partner_key\\\", \\\"manager_id\\\", \\\"manager_description\\\"}),\\n    #\\\"Merged Queries1\\\" = Table.NestedJoin(#\\\"Expanded Client_View\\\", {\\\"billed__staff_KEY\\\"}, Staff, {\\\"staff_KEY\\\"}, \\\"Staff\\\", JoinKind.LeftOuter),\\n    #\\\"Expanded Staff\\\" = Table.ExpandTableColumn(#\\\"Merged Queries1\\\", \\\"Staff\\\", {\\\"client_relations\\\"}, {\\\"client_relations\\\"}),\\n    #\\\"Added Custom\\\" = Table.AddColumn(#\\\"Expanded Staff\\\", \\\"Custom\\\", each if [billed__staff__staff_id] = [partner_id]\\nthen \\\"Partner\\\" else \\nif [billed__staff__staff_id] = [manager_id] \\nthen \\\"Manager\\\" else \\nif [client_relations] = \\\"True\\\" \\nthen \\\"CR\\\" else \\n\\\"Other\\\")\\nin\\n    #\\\"Added Custom\\\"\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Exception",
      "isHidden": false
    },
    {
      "name": "secondary_partner/ae",
      "lineageTag": "8f1de938-0109-46ca-bd6a-ff2fd3c41b7e",
      "description": "Related Client Group custom field",
      "queryGroupId": "0f1f8899-089c-4e71-8d18-ced9695e3f3b",
      "text": [
        "let",
        "    Source = Sql.Databases(\"cn-apps2\\cnapps2\"),",
        "    CSP_7952_CooperCS = Source{[Name=\"CSP_7952_CooperCS\"]}[Data],",
        "    dbo_Custom_Value_View = CSP_7952_CooperCS{[Schema=\"dbo\",Item=\"Custom_Value_View\"]}[Data],",
        "    #\"Filtered Rows\" = Table.SelectRows(dbo_Custom_Value_View, each [custom_field_KEY] = 57),",
        "    // Merged to the staff table to obtain the staff key, id, and description of the secondary partner.",
        "    #\"Merged Staff Table\" = Table.NestedJoin(#\"Filtered Rows\", {\"custom_value__staff_KEY\"}, Staff, {\"staff_KEY\"}, \"Staff\", JoinKind.LeftOuter),",
        "    #\"Expanded Staff\" = Table.ExpandTableColumn(#\"Merged Staff Table\", \"Staff\", {\"staff_KEY\", \"staff_id\", \"description\"}, {\"secondary_partner_KEY\", \"secondary_partner_id\", \"secondary_partner__description\"})",
        "in",
        "    #\"Expanded Staff\""
      ],
      "loadAsTableDisabled": true,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "secondary_partner/ae_date",
      "lineageTag": "58816c51-cac2-40a0-9b64-918b610a7a8e",
      "description": "Related Client Group custom field",
      "queryGroupId": "0f1f8899-089c-4e71-8d18-ced9695e3f3b",
      "text": [
        "let",
        "    Source = Sql.Databases(\"cn-apps2\\cnapps2\"),",
        "    CSP_7952_CooperCS = Source{[Name=\"CSP_7952_CooperCS\"]}[Data],",
        "    dbo_Custom_Value_View = CSP_7952_CooperCS{[Schema=\"dbo\",Item=\"Custom_Value_View\"]}[Data],",
        "    #\"Filtered Rows\" = Table.SelectRows(dbo_Custom_Value_View, each [custom_field_KEY] = 55)",
        "in",
        "    #\"Filtered Rows\""
      ],
      "loadAsTableDisabled": true,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "growth_reporting",
      "lineageTag": "607915e7-8577-4ea9-9ad0-9a7f8a1f247d",
      "description": "This table will show a list of all clients combined with the current and previous two fiscal years and find the amount billed/collected for those years.  This is meant to answer the question: \"Where is the growth in AE Bases coming from?\"",
      "queryGroupId": "51fd8311-d26e-4eb7-972c-874a7fd9d6a2",
      "text": [
        "let",
        "    Source = Sql.Databases(\"cn-apps2\\cnapps2\"),",
        "    CSP_7952_CooperCS = Source{[Name=\"CSP_7952_CooperCS\"]}[Data],",
        "    dbo_Client_View = CSP_7952_CooperCS{[Schema=\"dbo\",Item=\"Client_View\"]}[Data],",
        "    #\"Filtered Rows\" = Table.SelectRows(dbo_Client_View, each ([client_class__description] = \"Client\")),",
        "    // Removed the non-invoice deposits accounts.  This account is used for billings and collections in which the client is not listed",
        "    // ",
        "    #\"Filtered Rows1\" = Table.SelectRows(#\"Filtered Rows\", each [description] <> \"NON-INVOICE DEPOSITS\"),",
        "    #\"Removed Other Columns\" = Table.SelectColumns(#\"Filtered Rows1\",{\"client_KEY\", \"client_id\", \"description\", \"client_class_KEY\", \"client_status_KEY\", \"partner__staff_KEY\", \"manager__staff_KEY\", \"date_opened\", \"date_left\"}),",
        "    #\"Merged Queries3\" = Table.NestedJoin(#\"Removed Other Columns\", {\"client_KEY\"}, Client_View, {\"client_KEY\"}, \"Client_View\", JoinKind.LeftOuter),",
        "    #\"Expanded Client_View\" = Table.ExpandTableColumn(#\"Merged Queries3\", \"Client_View\", {\"secondary_partner_KEY\", \"secondary_partner_id\", \"secondary_partner__description\", \"secondary_partner_effective_date\"}, {\"secondary_partner_KEY\", \"secondary_partner_id\", \"secondary_partner__description\", \"secondary_partner_effective_date\"}),",
        "    // This column will represent the fiscal year in which the ae gained that client.",
        "    #\"Added secondary_partner_date_fy\" = Table.AddColumn(#\"Expanded Client_View\", \"secondary_partner_date_fy\", each if Date.Month([secondary_partner_effective_date]) >= 7 then ",
        "Date.Year([secondary_partner_effective_date]) + 1 else ",
        "Date.Year([secondary_partner_effective_date])),",
        "    // Created a column to show the fiscal year in which the client's account was opened with Cooper Norman.",
        "    #\"Added date_opened_fy\" = Table.AddColumn(#\"Added secondary_partner_date_fy\", \"date_opened_fy\", each if Date.Month([date_opened]) >= 7 then ",
        "Date.Year([date_opened]) + 1 else ",
        "Date.Year([date_opened])),",
        "    // Created a column to show the fiscal year in which the client's account was closed with Cooper Norman.",
        "    #\"Added date_left_fy\" = Table.AddColumn(#\"Added date_opened_fy\", \"date_left_fy\", each if Date.Month([date_left]) >= 7 then ",
        "Date.Year([date_left]) + 1 else ",
        "Date.Year([date_left])),",
        "    // Created a column of all ones to match up with the column of all ones in the [possible_fiscals] column.  This will allow us to expand each row in this table by the number of rows in the joined table.",
        "    #\"Added joining\" = Table.AddColumn(#\"Added date_left_fy\", \"joining\", each 1),",
        "    #\"Merged Queries\" = Table.NestedJoin(#\"Added joining\", {\"joining\"}, possible_fiscals, {\"joining\"}, \"possible_fiscals\", JoinKind.LeftOuter),",
        "    #\"Expanded possible_fiscals\" = Table.ExpandTableColumn(#\"Merged Queries\", \"possible_fiscals\", {\"possible_fy\", \"fy_start\"}, {\"possible_fy\", \"fy_start\"}),",
        "    // This column is meant to help us join to the billing decision view table and obtain the amount of billings for that client in the fiscal year.",
        "    #\"Added client_possible_fy\" = Table.AddColumn(#\"Expanded possible_fiscals\", \"client_possible_fy\", each Text.From([client_KEY]) & \"-\" & Text.From([possible_fy])),",
        "    // This column is meant to help us join to the billing decision view table and obtain the amount of billings for that client in the previous fiscal year.",
        "    #\"Added client_previous_fy\" = Table.AddColumn(#\"Added client_possible_fy\", \"client_previous_fy\", each Text.From([client_KEY]) & \"-\" & Text.From([possible_fy] - 1)),",
        "    #\"Merged Queries1\" = Table.NestedJoin(#\"Added client_previous_fy\", {\"client_possible_fy\"}, Billing_Decision_View_fiscal_calc, {\"client_fy\"}, \"Billing_Decision_View_fiscal_calc\", JoinKind.LeftOuter),",
        "    // Expanded the bill amount for each possible client fiscal year.",
        "    #\"Expanded Billing_Decision_View_fiscal_calc\" = Table.ExpandTableColumn(#\"Merged Queries1\", \"Billing_Decision_View_fiscal_calc\", {\"bill_amount\"}, {\"bill_amount\"}),",
        "    #\"Merged Queries2\" = Table.NestedJoin(#\"Expanded Billing_Decision_View_fiscal_calc\", {\"client_previous_fy\"}, Billing_Decision_View_fiscal_calc, {\"client_fy\"}, \"Billing_Decision_View_fiscal_calc\", JoinKind.LeftOuter),",
        "    // Expanded the bill amount for each possible client fiscal year.",
        "    #\"Expanded Billing_Decision_View_fiscal_calc1\" = Table.ExpandTableColumn(#\"Merged Queries2\", \"Billing_Decision_View_fiscal_calc\", {\"bill_amount\"}, {\"bill_amount_prev\"}),",
        "    // If the client has opened their account in the possible FY, their bill amount will be shown here as an amount gained.",
        "    #\"Added client_gained\" = Table.AddColumn(#\"Expanded Billing_Decision_View_fiscal_calc1\", \"client_gained\", each if [client_status_KEY] = 2 and [bill_amount] = null and [bill_amount_prev] = null then null else if [possible_fy] = [date_opened_fy] then [bill_amount] else null, type number),",
        "    // If the client has closed their account in the possible FY, their bill amount - previous bill amount will be shown here as an amount lost.",
        "    #\"Added client_lost\" = Table.AddColumn(#\"Added client_gained\", \"client_lost\", each if [client_status_KEY] = 2 and ([bill_amount] = null or [bill_amount] = 0) and ([bill_amount_prev] = null or [bill_amount_prev] = 0) then null else if ([date_left_fy] = [possible_fy] and ([bill_amount] = null or [bill_amount] = 0)) or ([date_left_fy] + 1 = [possible_fy] and  ([bill_amount] = null or [bill_amount] = 0)) then if [bill_amount] = null then 0 - [bill_amount_prev] else [bill_amount] - [bill_amount_prev] else null, type number),",
        "    // If the client has closed their account in the possible FY, their bill amount - previous bill amount will be shown here as an amount lost.",
        "    #\"Added client_transferred\" = Table.AddColumn(#\"Added client_lost\", \"client_transferred\", each if [possible_fy] = [secondary_partner_date_fy] then [bill_amount] else null, type number),",
        "    // If the bill_amount has not come from a client starting in that year, being transferred in that year, or leaving in the year previous, then it is ORGANIC growth.",
        "    #\"Added organic_growth\" = Table.AddColumn(#\"Added client_transferred\", \"organic_growth\", each if ([client_gained] <> 0 or [client_gained] <> null) and ([client_lost] <> 0 or [client_lost] <> null) and ([client_transferred] <> 0 or [client_transferred] <> null) then [bill_amount] - [bill_amount_prev] else null, type number)",
        "in",
        "    #\"Added organic_growth\""
      ],
      "isDirectQuery": true,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = Sql.Databases(\\\"cn-apps2\\\\cnapps2\\\"),\\n    CSP_7952_CooperCS = Source{[Name=\\\"CSP_7952_CooperCS\\\"]}[Data],\\n    dbo_Client_View = CSP_7952_CooperCS{[Schema=\\\"dbo\\\",Item=\\\"Client_View\\\"]}[Data],\\n    #\\\"Filtered Rows\\\" = Table.SelectRows(dbo_Client_View, each ([client_class__description] = \\\"Client\\\")),\\n    // Removed the non-invoice deposits accounts.  This account is used for billings and collections in which the client is not listed\\n    // \\n    #\\\"Filtered Rows1\\\" = Table.SelectRows(#\\\"Filtered Rows\\\", each [description] <> \\\"NON-INVOICE DEPOSITS\\\"),\\n    #\\\"Removed Other Columns\\\" = Table.SelectColumns(#\\\"Filtered Rows1\\\",{\\\"client_KEY\\\", \\\"client_id\\\", \\\"description\\\", \\\"client_class_KEY\\\", \\\"client_status_KEY\\\", \\\"partner__staff_KEY\\\", \\\"manager__staff_KEY\\\", \\\"date_opened\\\", \\\"date_left\\\"}),\\n    #\\\"Merged Queries3\\\" = Table.NestedJoin(#\\\"Removed Other Columns\\\", {\\\"client_KEY\\\"}, Client_View, {\\\"client_KEY\\\"}, \\\"Client_View\\\", JoinKind.LeftOuter),\\n    #\\\"Expanded Client_View\\\" = Table.ExpandTableColumn(#\\\"Merged Queries3\\\", \\\"Client_View\\\", {\\\"secondary_partner_KEY\\\", \\\"secondary_partner_id\\\", \\\"secondary_partner__description\\\", \\\"secondary_partner_effective_date\\\"}, {\\\"secondary_partner_KEY\\\", \\\"secondary_partner_id\\\", \\\"secondary_partner__description\\\", \\\"secondary_partner_effective_date\\\"}),\\n    // This column will represent the fiscal year in which the ae gained that client.\\n    #\\\"Added secondary_partner_date_fy\\\" = Table.AddColumn(#\\\"Expanded Client_View\\\", \\\"secondary_partner_date_fy\\\", each if Date.Month([secondary_partner_effective_date]) >= 7 then \\nDate.Year([secondary_partner_effective_date]) + 1 else \\nDate.Year([secondary_partner_effective_date])),\\n    // Created a column to show the fiscal year in which the client's account was opened with Cooper Norman.\\n    #\\\"Added date_opened_fy\\\" = Table.AddColumn(#\\\"Added secondary_partner_date_fy\\\", \\\"date_opened_fy\\\", each if Date.Month([date_opened]) >= 7 then \\nDate.Year([date_opened]) + 1 else \\nDate.Year([date_opened])),\\n    // Created a column to show the fiscal year in which the client's account was closed with Cooper Norman.\\n    #\\\"Added date_left_fy\\\" = Table.AddColumn(#\\\"Added date_opened_fy\\\", \\\"date_left_fy\\\", each if Date.Month([date_left]) >= 7 then \\nDate.Year([date_left]) + 1 else \\nDate.Year([date_left])),\\n    // Created a column of all ones to match up with the column of all ones in the [possible_fiscals] column.  This will allow us to expand each row in this table by the number of rows in the joined table.\\n    #\\\"Added joining\\\" = Table.AddColumn(#\\\"Added date_left_fy\\\", \\\"joining\\\", each 1),\\n    #\\\"Merged Queries\\\" = Table.NestedJoin(#\\\"Added joining\\\", {\\\"joining\\\"}, possible_fiscals, {\\\"joining\\\"}, \\\"possible_fiscals\\\", JoinKind.LeftOuter),\\n    #\\\"Expanded possible_fiscals\\\" = Table.ExpandTableColumn(#\\\"Merged Queries\\\", \\\"possible_fiscals\\\", {\\\"possible_fy\\\", \\\"fy_start\\\"}, {\\\"possible_fy\\\", \\\"fy_start\\\"}),\\n    // This column is meant to help us join to the billing decision view table and obtain the amount of billings for that client in the fiscal year.\\n    #\\\"Added client_possible_fy\\\" = Table.AddColumn(#\\\"Expanded possible_fiscals\\\", \\\"client_possible_fy\\\", each Text.From([client_KEY]) & \\\"-\\\" & Text.From([possible_fy])),\\n    // This column is meant to help us join to the billing decision view table and obtain the amount of billings for that client in the previous fiscal year.\\n    #\\\"Added client_previous_fy\\\" = Table.AddColumn(#\\\"Added client_possible_fy\\\", \\\"client_previous_fy\\\", each Text.From([client_KEY]) & \\\"-\\\" & Text.From([possible_fy] - 1)),\\n    #\\\"Merged Queries1\\\" = Table.NestedJoin(#\\\"Added client_previous_fy\\\", {\\\"client_possible_fy\\\"}, Billing_Decision_View_fiscal_calc, {\\\"client_fy\\\"}, \\\"Billing_Decision_View_fiscal_calc\\\", JoinKind.LeftOuter),\\n    // Expanded the bill amount for each possible client fiscal year.\\n    #\\\"Expanded Billing_Decision_View_fiscal_calc\\\" = Table.ExpandTableColumn(#\\\"Merged Queries1\\\", \\\"Billing_Decision_View_fiscal_calc\\\", {\\\"bill_amount\\\"}, {\\\"bill_amount\\\"}),\\n    #\\\"Merged Queries2\\\" = Table.NestedJoin(#\\\"Expanded Billing_Decision_View_fiscal_calc\\\", {\\\"client_previous_fy\\\"}, Billing_Decision_View_fiscal_calc, {\\\"client_fy\\\"}, \\\"Billing_Decision_View_fiscal_calc\\\", JoinKind.LeftOuter),\\n    // Expanded the bill amount for each possible client fiscal year.\\n    #\\\"Expanded Billing_Decision_View_fiscal_calc1\\\" = Table.ExpandTableColumn(#\\\"Merged Queries2\\\", \\\"Billing_Decision_View_fiscal_calc\\\", {\\\"bill_amount\\\"}, {\\\"bill_amount_prev\\\"}),\\n    // If the client has opened their account in the possible FY, their bill amount will be shown here as an amount gained.\\n    #\\\"Added client_gained\\\" = Table.AddColumn(#\\\"Expanded Billing_Decision_View_fiscal_calc1\\\", \\\"client_gained\\\", each if [client_status_KEY] = 2 and [bill_amount] = null and [bill_amount_prev] = null then null else if [possible_fy] = [date_opened_fy] then [bill_amount] else null, type number),\\n    // If the client has closed their account in the possible FY, their bill amount - previous bill amount will be shown here as an amount lost.\\n    #\\\"Added client_lost\\\" = Table.AddColumn(#\\\"Added client_gained\\\", \\\"client_lost\\\", each if [client_status_KEY] = 2 and ([bill_amount] = null or [bill_amount] = 0) and ([bill_amount_prev] = null or [bill_amount_prev] = 0) then null else if ([date_left_fy] = [possible_fy] and ([bill_amount] = null or [bill_amount] = 0)) or ([date_left_fy] + 1 = [possible_fy] and  ([bill_amount] = null or [bill_amount] = 0)) then if [bill_amount] = null then 0 - [bill_amount_prev] else [bill_amount] - [bill_amount_prev] else null, type number),\\n    // If the client has closed their account in the possible FY, their bill amount - previous bill amount will be shown here as an amount lost.\\n    #\\\"Added client_transferred\\\" = Table.AddColumn(#\\\"Added client_lost\\\", \\\"client_transferred\\\", each if [possible_fy] = [secondary_partner_date_fy] then [bill_amount] else null, type number),\\n    // If the bill_amount has not come from a client starting in that year, being transferred in that year, or leaving in the year previous, then it is ORGANIC growth.\\n    #\\\"Added organic_growth\\\" = Table.AddColumn(#\\\"Added client_transferred\\\", \\\"organic_growth\\\", each if ([client_gained] <> 0 or [client_gained] <> null) and ([client_lost] <> 0 or [client_lost] <> null) and ([client_transferred] <> 0 or [client_transferred] <> null) then [bill_amount] - [bill_amount_prev] else null, type number)\\nin\\n    #\\\"Added organic_growth\\\"\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Exception",
      "isHidden": false
    },
    {
      "name": "possible_fiscals",
      "lineageTag": "07db3f89-09d8-4ea7-907d-0ff433d9ff76",
      "queryGroupId": "51fd8311-d26e-4eb7-972c-874a7fd9d6a2",
      "text": [
        "let",
        "    Source = Sql.Databases(\"cn-apps2\\cnapps2\"),",
        "    CSP_7952_CooperCS = Source{[Name=\"CSP_7952_CooperCS\"]}[Data],",
        "    dbo_Client_Date_Cache = CSP_7952_CooperCS{[Schema=\"dbo\",Item=\"Client_Date_Cache\"]}[Data],",
        "    #\"Removed Other Columns\" = Table.SelectColumns(dbo_Client_Date_Cache,{\"entry_date\"}),",
        "    #\"Grouped Rows\" = Table.Group(#\"Removed Other Columns\", {\"entry_date\"}, {{\"Count\", each Table.RowCount(_), Int64.Type}}),",
        "    #\"Added Custom\" = Table.AddColumn(#\"Grouped Rows\", \"possible_fy\", each if Date.Month([entry_date]) >= 7 then ",
        "Date.Year([entry_date]) + 1 else ",
        "Date.Year([entry_date])),",
        "    #\"Grouped Rows1\" = Table.Group(#\"Added Custom\", {\"possible_fy\"}, {{\"fy_start\", each List.Min([entry_date]), type date}}),",
        "    // this column is meant to limit the fy rows to the current fy and the previous two fys.  This is because Direct Query hates the \"Keep Top Rows\" command.  This will be a work-around that will allow us to maintain the amount of data.",
        "    #\"Added current_fy_filtering\" = Table.AddColumn(#\"Grouped Rows1\", \"current_fy_filtering\", each if [possible_fy] = ",
        "(if Date.Month(Date.From( DateTime.LocalNow()) ) >= 7 then Date.Year(Date.From( DateTime.LocalNow()) ) + 1 else Date.Year(Date.From( DateTime.LocalNow()) ) ) ",
        "then 1 else ",
        "",
        "if [possible_fy] = ",
        "(if Date.Month(Date.From( DateTime.LocalNow()) ) >= 7 then Date.Year(Date.From( DateTime.LocalNow()) ) + 1 else Date.Year(Date.From( DateTime.LocalNow()) ) ) - 1 ",
        "then 1 else ",
        "",
        "if [possible_fy] = ",
        "(if Date.Month(Date.From( DateTime.LocalNow()) ) >= 7 then Date.Year(Date.From( DateTime.LocalNow()) ) + 1 else Date.Year(Date.From( DateTime.LocalNow()) ) ) - 2 ",
        "then 1 else null),",
        "    // This table has used a duplicate of the client_date_cache to create a unique list of all fiscal years possible and the minimum date found within them (this SHOULD always be July 1 of each year, but if there are no entries on July 1 it will show a different day).  Creating it this was is to ensure I can join to the Client table and obtain a unqiue list of all clients and all possible fiscal years within direct query.",
        "    #\"Filtered Rows\" = Table.SelectRows(#\"Added current_fy_filtering\", each [current_fy_filtering] <> null),",
        "    #\"Added Custom1\" = Table.AddColumn(#\"Filtered Rows\", \"joining\", each 1)",
        "in",
        "    #\"Added Custom1\""
      ],
      "loadAsTableDisabled": true,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "Billing_Decision_View_fiscal_calc",
      "lineageTag": "05d331d3-e52d-4034-9219-3bce74502ebd",
      "queryGroupId": "51fd8311-d26e-4eb7-972c-874a7fd9d6a2",
      "text": [
        "let",
        "    Source = Sql.Databases(\"cn-apps2\\cnapps2\"),",
        "    CSP_7952_CooperCS = Source{[Name=\"CSP_7952_CooperCS\"]}[Data],",
        "    dbo_Billing_Decision_View = CSP_7952_CooperCS{[Schema=\"dbo\",Item=\"Billing_Decision_View\"]}[Data],",
        "    #\"Added Custom\" = Table.AddColumn(dbo_Billing_Decision_View, \"client_engagement_KEY\", each Text.From([sheet_entry__client_KEY]) & \"_\" & Text.From([sheet_entry__engagement_KEY])),",
        "    // I am using the invoice_date as the engine for the fiscal year because - in 99% of calculation regarding billing - PCS used the invoice date found in this table.",
        "    #\"Added invoice_fy\" = Table.AddColumn(#\"Added Custom\", \"invoice_fy\", each if Date.Month([invoice__invoice_date]) >= 7 then ",
        "Date.Year([invoice__invoice_date]) + 1 else ",
        "Date.Year([invoice__invoice_date]), type number),",
        "    // This column will allow us to merge to the growth_reporting table and determine how much was billed in the selected fiscal year per client.",
        "    #\"Added client_fy\" = Table.AddColumn(#\"Added invoice_fy\", \"client_fy\", each Text.From([sheet_entry__client_KEY]) & \"-\" & Text.From([invoice_fy])),",
        "    #\"Filtered Rows\" = Table.SelectRows(#\"Added client_fy\", each true),",
        "    #\"Grouped Rows\" = Table.Group(#\"Filtered Rows\", {\"client_fy\", \"sheet_entry__client_KEY\", \"invoice_fy\"}, {{\"bill_amount\", each List.Sum([bill_amount]), type number}})",
        "in",
        "    #\"Grouped Rows\""
      ],
      "loadAsTableDisabled": true,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "Engagement_Template",
      "lineageTag": "ab5e192b-556e-4605-8178-10b8b82e83d0",
      "queryGroupId": "51fd8311-d26e-4eb7-972c-874a7fd9d6a2",
      "text": [
        "let",
        "    Source = Sql.Database(\"cn-apps2\\cnapps2\", \"CSP_7952_CooperCS\"),",
        "    dbo_Engagement_Template = Source{[Schema=\"dbo\",Item=\"Engagement_Template\"]}[Data]",
        "in",
        "    dbo_Engagement_Template"
      ],
      "isDirectQuery": true,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = Sql.Database(\\\"cn-apps2\\\\cnapps2\\\", \\\"CSP_7952_CooperCS\\\"),\\n    dbo_Engagement_Template = Source{[Schema=\\\"dbo\\\",Item=\\\"Engagement_Template\\\"]}[Data]\\nin\\n    dbo_Engagement_Template\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "staff_primary_id",
      "lineageTag": "332945e3-6218-4150-bb9d-25e0c9d7283b",
      "description": "Related Client Group custom field",
      "queryGroupId": "0f1f8899-089c-4e71-8d18-ced9695e3f3b",
      "text": [
        "let",
        "    Source = Sql.Databases(\"cn-apps2\\cnapps2\"),",
        "    CSP_7952_CooperCS = Source{[Name=\"CSP_7952_CooperCS\"]}[Data],",
        "    dbo_Custom_Value_View = CSP_7952_CooperCS{[Schema=\"dbo\",Item=\"Custom_Value_View\"]}[Data],",
        "    #\"Filtered Rows\" = Table.SelectRows(dbo_Custom_Value_View, each [custom_field_KEY] = 359)",
        "in",
        "    #\"Filtered Rows\""
      ],
      "loadAsTableDisabled": true,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "client_industry",
      "lineageTag": "05da54fa-fbd3-438c-b4a7-9987db852b99",
      "description": "Related Client Group custom field",
      "queryGroupId": "0f1f8899-089c-4e71-8d18-ced9695e3f3b",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "    Source = Sql.Databases(\"cn-apps2\\cnapps2\"),",
        "    CSP_7952_CooperCS = Source{[Name=\"CSP_7952_CooperCS\"]}[Data],",
        "    dbo_Custom_Value_View = CSP_7952_CooperCS{[Schema=\"dbo\",Item=\"Custom_Value_View\"]}[Data],",
        "    #\"Filtered Rows\" = Table.SelectRows(dbo_Custom_Value_View, each [custom_field_KEY] = 368),",
        "    #\"Merged Queries\" = Table.NestedJoin(#\"Filtered Rows\", {\"custom_value__custom_grouping_KEY\"}, industry_grouping, {\"custom_grouping_KEY\"}, \"industry_grouping\", JoinKind.LeftOuter),",
        "    #\"Expanded industry_grouping\" = Table.ExpandTableColumn(#\"Merged Queries\", \"industry_grouping\", {\"custom_grouping_id\", \"description\"}, {\"industry_id\", \"industry__description\"})",
        "in",
        "    #\"Expanded industry_grouping\""
      ],
      "loadAsTableDisabled": true,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "industry_grouping",
      "lineageTag": "c1b25f03-932c-475a-80f4-06790d89dd7b",
      "queryGroupId": "0f1f8899-089c-4e71-8d18-ced9695e3f3b",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "    Source = Sql.Databases(\"cn-apps2\\cnapps2\"),",
        "    CSP_7952_CooperCS = Source{[Name=\"CSP_7952_CooperCS\"]}[Data],",
        "    dbo_Custom_Grouping = CSP_7952_CooperCS{[Schema=\"dbo\",Item=\"Custom_Grouping\"]}[Data],",
        "    #\"Filtered Rows\" = Table.SelectRows(dbo_Custom_Grouping, each [custom_field_KEY] = 368)",
        "in",
        "    #\"Filtered Rows\""
      ],
      "loadAsTableDisabled": true,
      "resultType": "Table",
      "isHidden": false
    }
  ],
  "queryGroups": [
    {
      "name": "cutsom_groupings",
      "id": "0f1f8899-089c-4e71-8d18-ced9695e3f3b",
      "order": 2,
      "description": ""
    },
    {
      "name": "PCS Tables",
      "id": "51fd8311-d26e-4eb7-972c-874a7fd9d6a2",
      "order": 1,
      "description": ""
    }
  ],
  "culture": "en-US",
  "firewallEnabled": true
}